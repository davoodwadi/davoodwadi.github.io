{"title":"Split the data into training and testing sets","markdown":{"yaml":{"title":"","format":{"html":{"code-fold":false}},"jupyter":"python3","execute":{"cache":true}},"headingText":"Split the data into training and testing sets","containsRefs":false,"markdown":"\n\n\nThe precision-recall curve is a graphical representation of the trade-off between precision and recall for different threshold values. It is commonly used in binary classification problems where the goal is to classify data into one of two classes.\n\nLet's start by understanding precision and recall:\n\nPrecision is defined as the number of true positives (TP) divided by the sum of true positives and false positives (FP):\n\\[\nPrecision = \\frac{TP}{TP + FP}\n\\]\n\nRecall is defined as the number of true positives (TP) divided by the sum of true positives and false negatives (FN):\n\\[\nRecall = \\frac{TP}{TP + FN}\n\\]\n\nIn a classification problem, a high precision means that the classifier is making fewer false positive predictions, while a high recall means that it is making fewer false negative predictions.\n\nTo create a precision-recall curve, we need a classifier that can provide prediction probabilities or scores for each instance. Then, by varying the threshold on these scores, we can generate different points on the precision-recall curve.\n\nWe will demonstrate this process using the scikit-learn library and the Breast Cancer Wisconsin (Diagnostic) dataset. Let's get started:\n\nStep 1: Import the necessary libraries\n\n```{python}\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import precision_recall_curve\n```\n\nStep 2: Load and prepare the dataset\n\n```{python}\ndata = load_breast_cancer()\nX, y = data.data, data.target\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n```\n\nStep 3: Train a classifier and obtain prediction probabilities\n\n```{python}\n# Train a logistic regression classifier\nclassifier = LogisticRegression(max_iter=10_000)\nclassifier.fit(X_train, y_train)\n\n# Obtain prediction probabilities for the test set\ny_prob = classifier.predict_proba(X_test)[:, 1]\n```\n\nStep 4: Calculate precision and recall for different threshold values\n\n```{python}\nprecision, recall, thresholds = precision_recall_curve(y_test, y_prob)\n```\n\nStep 5: Plot the precision-recall curve\n\n```{python}\nplt.plot(thresholds, precision[:-1], label='Precision')\nplt.plot(thresholds, recall[:-1], label='Recall')\nplt.xlabel('Threshold')\nplt.title('Precision-Recall Curve')\nplt.legend()\nplt.show()\n```\n\nIn this code, we first import the necessary libraries such as numpy, matplotlib, scikit-learn modules, and data from scikit-learn's built-in Breast Cancer Wisconsin dataset.\n\nNext, we load and prepare the dataset. We split it into training and testing sets using the `train_test_split` function.\n\nThen, we train a logistic regression classifier on the training set and obtain prediction probabilities for the test set using the `predict_proba` method.\n\nFinally, we calculate precision and recall values for different threshold values using the `precision_recall_curve` function. We plot these values to visualize the precision-recall curve using the `plt.plot` function.\n\nThe resulting precision-recall curve shows how the precision and recall values change for different threshold values. A higher precision and recall value indicates a better classifier performance.\n\nThis curve can be useful in identifying an appropriate threshold value that balances precision and recall according to the specific problem requirements.","srcMarkdownNoYaml":"\n\n\nThe precision-recall curve is a graphical representation of the trade-off between precision and recall for different threshold values. It is commonly used in binary classification problems where the goal is to classify data into one of two classes.\n\nLet's start by understanding precision and recall:\n\nPrecision is defined as the number of true positives (TP) divided by the sum of true positives and false positives (FP):\n\\[\nPrecision = \\frac{TP}{TP + FP}\n\\]\n\nRecall is defined as the number of true positives (TP) divided by the sum of true positives and false negatives (FN):\n\\[\nRecall = \\frac{TP}{TP + FN}\n\\]\n\nIn a classification problem, a high precision means that the classifier is making fewer false positive predictions, while a high recall means that it is making fewer false negative predictions.\n\nTo create a precision-recall curve, we need a classifier that can provide prediction probabilities or scores for each instance. Then, by varying the threshold on these scores, we can generate different points on the precision-recall curve.\n\nWe will demonstrate this process using the scikit-learn library and the Breast Cancer Wisconsin (Diagnostic) dataset. Let's get started:\n\nStep 1: Import the necessary libraries\n\n```{python}\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import precision_recall_curve\n```\n\nStep 2: Load and prepare the dataset\n\n```{python}\ndata = load_breast_cancer()\nX, y = data.data, data.target\n\n# Split the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n```\n\nStep 3: Train a classifier and obtain prediction probabilities\n\n```{python}\n# Train a logistic regression classifier\nclassifier = LogisticRegression(max_iter=10_000)\nclassifier.fit(X_train, y_train)\n\n# Obtain prediction probabilities for the test set\ny_prob = classifier.predict_proba(X_test)[:, 1]\n```\n\nStep 4: Calculate precision and recall for different threshold values\n\n```{python}\nprecision, recall, thresholds = precision_recall_curve(y_test, y_prob)\n```\n\nStep 5: Plot the precision-recall curve\n\n```{python}\nplt.plot(thresholds, precision[:-1], label='Precision')\nplt.plot(thresholds, recall[:-1], label='Recall')\nplt.xlabel('Threshold')\nplt.title('Precision-Recall Curve')\nplt.legend()\nplt.show()\n```\n\nIn this code, we first import the necessary libraries such as numpy, matplotlib, scikit-learn modules, and data from scikit-learn's built-in Breast Cancer Wisconsin dataset.\n\nNext, we load and prepare the dataset. We split it into training and testing sets using the `train_test_split` function.\n\nThen, we train a logistic regression classifier on the training set and obtain prediction probabilities for the test set using the `predict_proba` method.\n\nFinally, we calculate precision and recall values for different threshold values using the `precision_recall_curve` function. We plot these values to visualize the precision-recall curve using the `plt.plot` function.\n\nThe resulting precision-recall curve shows how the precision and recall values change for different threshold values. A higher precision and recall value indicates a better classifier performance.\n\nThis curve can be useful in identifying an appropriate threshold value that balances precision and recall according to the specific problem requirements."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"precis.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.55","theme":"cosmo","title":"","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}