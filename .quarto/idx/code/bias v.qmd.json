{"title":"Bias-Variance Trade-off","markdown":{"yaml":{"title":"","format":{"html":{"code-fold":false}},"jupyter":"python3","execute":{"cache":true}},"headingText":"Bias-Variance Trade-off","containsRefs":false,"markdown":"\n\n\n\nThe bias-variance trade-off is a fundamental concept in machine learning that helps us understand the relationship between the complexity of a model and its ability to generalize to unseen data. In supervised learning problems, we aim to find a model, usually a mathematical function, that can accurately predict the target variable based on the input features.\n\n## Bias and Variance\n\nBefore diving into the bias-variance trade-off, let's briefly explain two important concepts: **bias** and **variance**.\n\n- **Bias** measures how much our model’s predictions deviate from the true values. A model with high bias oversimplifies the underlying relationship between the features and the target variable. This can lead to underfitting, where the model fails to capture the patterns and relationships in the data.\n\n- **Variance** measures the variability of model predictions for different training sets. A model with high variance is too sensitive to the specific training examples and does not generalize well to new, unseen data. This can lead to overfitting, where the model fits the training data too well but performs poorly on new data.\n\nThe aim is to find a good balance between bias and variance, where the model captures the underlying patterns in the training data without overfitting.\n\n## Bias-Variance Trade-off\n\nThe bias-variance trade-off states that as we decrease the bias of a model (increasing complexity), we tend to increase its variance, and vice versa. This trade-off occurs because model complexity allows for a better fit to the training data, but at the risk of poor performance on new data.\n\nTo illustrate this concept, let's consider a regression problem where we can adjust the complexity of a model by changing the degree of the polynomial used for fitting the data.\n\n## Example\n\n### Importing Required Libraries\n\nWe start by importing the necessary libraries: NumPy for numerical operations and matplotlib for visualization.\n\n```{python}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# To plot the graphs inline in Jupyter Notebook\n%matplotlib inline\n```\n\n### Generating Synthetic Data\n\nNext, we generate some synthetic data with a nonlinear relationship between the input features and the target variable using the `numpy` library.\n\n```{python}\n# Set a random seed for reproducibility\nnp.random.seed(0)\n\n# Generate input features\nX = np.linspace(-5, 5, 100).reshape(-1, 1)\n\n# Generate target variable with noise\nY_true = X**3 - X**2 + X + np.random.randn(100, 1)\n```\n\nHere, we generate 100 samples of input features `X` ranging from -5 to 5. The target variable `Y_true` is generated using a cubic relationship with some random Gaussian noise.\n\n### Fitting Polynomial Models\n\nWe will now fit polynomial models with different degrees to the synthetic data and observe the effect of model complexity on bias and variance.\n\n```{python}\n# Create a function to fit polynomial models and visualize the results\ndef fit_polynomial(X, Y_true, degree):\n    # Fit polynomial regression model\n    poly_features = np.polynomial.Polynomial.fit(X.flatten(), Y_true.flatten(), degree)\n    Y_pred = poly_features(X.flatten())\n    \n    # Compute bias and variance\n    bias = np.mean(np.abs(Y_true - Y_pred))\n    variance = np.var(Y_pred)\n    \n    # Plot the results\n    plt.figure(figsize=(10, 6))\n    plt.scatter(X, Y_true, label='True Data', color='b')\n    plt.plot(X, Y_pred, label='Predicted', color='r')\n    plt.title(f'Polynomial Regression (Degree = {degree})\\nBias = {bias:.2f}, Variance = {variance:.2f}')\n    plt.legend()\n    plt.xlabel('X')\n    plt.ylabel('Y')\n    plt.show()\n\n# Fit polynomial models with degrees 1, 2, 3, 5, 10\nfit_polynomial(X, Y_true, degree=1)\nfit_polynomial(X, Y_true, degree=2)\nfit_polynomial(X, Y_true, degree=3)\nfit_polynomial(X, Y_true, degree=5)\nfit_polynomial(X, Y_true, degree=10)\n```\n\nIn this code block, we define a function `fit_polynomial` that takes the input features `X`, true target variable `Y_true`, and the degree of the polynomial model to be fitted as arguments. Inside the function, we use the `numpy.polynomial.Polynomial.fit` function to fit a polynomial regression model with the desired degree.\n\nFor each degree of the polynomial model, we compute the bias and variance using the mean absolute error and variance of the predicted values. Then, we plot the true data points, the predicted curve, and display the bias and variance in the title of the plot.\n\n### Analysis and Observations\n\nBy running the code above, we get a series of plots showing the true data points and the predicted curves for polynomial regression models with different degrees. Each plot also displays the corresponding bias and variance values.\n\n- For a linear model (degree=1), the model is too simple to capture the underlying cubic relationship in the data. Hence, it has a high bias and performs poorly in terms of fitting the data.\n\n- As the degree of the polynomial model increases, the model can fit the data more accurately, resulting in reduced bias. However, as the complexity increases (degree=5 and 10), we observe that the models start to capture the random fluctuations in the data, resulting in higher variance. These models may fit the training data very well but are likely to perform poorly on unseen data.\n\n- The model with a degree of 3 strikes a good balance between bias and variance, as it captures the underlying cubic relationship while avoiding overfitting.\n\n## Conclusion\n\nThe bias-variance trade-off is a fundamental concept in machine learning. It helps us understand the relationship between the complexity of a model and its ability to generalize to unseen data. By finding the right balance between bias and variance, we can develop models that accurately represent the patterns in the data without overfitting or oversimplifying the relationships.","srcMarkdownNoYaml":"\n\n\n# Bias-Variance Trade-off\n\nThe bias-variance trade-off is a fundamental concept in machine learning that helps us understand the relationship between the complexity of a model and its ability to generalize to unseen data. In supervised learning problems, we aim to find a model, usually a mathematical function, that can accurately predict the target variable based on the input features.\n\n## Bias and Variance\n\nBefore diving into the bias-variance trade-off, let's briefly explain two important concepts: **bias** and **variance**.\n\n- **Bias** measures how much our model’s predictions deviate from the true values. A model with high bias oversimplifies the underlying relationship between the features and the target variable. This can lead to underfitting, where the model fails to capture the patterns and relationships in the data.\n\n- **Variance** measures the variability of model predictions for different training sets. A model with high variance is too sensitive to the specific training examples and does not generalize well to new, unseen data. This can lead to overfitting, where the model fits the training data too well but performs poorly on new data.\n\nThe aim is to find a good balance between bias and variance, where the model captures the underlying patterns in the training data without overfitting.\n\n## Bias-Variance Trade-off\n\nThe bias-variance trade-off states that as we decrease the bias of a model (increasing complexity), we tend to increase its variance, and vice versa. This trade-off occurs because model complexity allows for a better fit to the training data, but at the risk of poor performance on new data.\n\nTo illustrate this concept, let's consider a regression problem where we can adjust the complexity of a model by changing the degree of the polynomial used for fitting the data.\n\n## Example\n\n### Importing Required Libraries\n\nWe start by importing the necessary libraries: NumPy for numerical operations and matplotlib for visualization.\n\n```{python}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# To plot the graphs inline in Jupyter Notebook\n%matplotlib inline\n```\n\n### Generating Synthetic Data\n\nNext, we generate some synthetic data with a nonlinear relationship between the input features and the target variable using the `numpy` library.\n\n```{python}\n# Set a random seed for reproducibility\nnp.random.seed(0)\n\n# Generate input features\nX = np.linspace(-5, 5, 100).reshape(-1, 1)\n\n# Generate target variable with noise\nY_true = X**3 - X**2 + X + np.random.randn(100, 1)\n```\n\nHere, we generate 100 samples of input features `X` ranging from -5 to 5. The target variable `Y_true` is generated using a cubic relationship with some random Gaussian noise.\n\n### Fitting Polynomial Models\n\nWe will now fit polynomial models with different degrees to the synthetic data and observe the effect of model complexity on bias and variance.\n\n```{python}\n# Create a function to fit polynomial models and visualize the results\ndef fit_polynomial(X, Y_true, degree):\n    # Fit polynomial regression model\n    poly_features = np.polynomial.Polynomial.fit(X.flatten(), Y_true.flatten(), degree)\n    Y_pred = poly_features(X.flatten())\n    \n    # Compute bias and variance\n    bias = np.mean(np.abs(Y_true - Y_pred))\n    variance = np.var(Y_pred)\n    \n    # Plot the results\n    plt.figure(figsize=(10, 6))\n    plt.scatter(X, Y_true, label='True Data', color='b')\n    plt.plot(X, Y_pred, label='Predicted', color='r')\n    plt.title(f'Polynomial Regression (Degree = {degree})\\nBias = {bias:.2f}, Variance = {variance:.2f}')\n    plt.legend()\n    plt.xlabel('X')\n    plt.ylabel('Y')\n    plt.show()\n\n# Fit polynomial models with degrees 1, 2, 3, 5, 10\nfit_polynomial(X, Y_true, degree=1)\nfit_polynomial(X, Y_true, degree=2)\nfit_polynomial(X, Y_true, degree=3)\nfit_polynomial(X, Y_true, degree=5)\nfit_polynomial(X, Y_true, degree=10)\n```\n\nIn this code block, we define a function `fit_polynomial` that takes the input features `X`, true target variable `Y_true`, and the degree of the polynomial model to be fitted as arguments. Inside the function, we use the `numpy.polynomial.Polynomial.fit` function to fit a polynomial regression model with the desired degree.\n\nFor each degree of the polynomial model, we compute the bias and variance using the mean absolute error and variance of the predicted values. Then, we plot the true data points, the predicted curve, and display the bias and variance in the title of the plot.\n\n### Analysis and Observations\n\nBy running the code above, we get a series of plots showing the true data points and the predicted curves for polynomial regression models with different degrees. Each plot also displays the corresponding bias and variance values.\n\n- For a linear model (degree=1), the model is too simple to capture the underlying cubic relationship in the data. Hence, it has a high bias and performs poorly in terms of fitting the data.\n\n- As the degree of the polynomial model increases, the model can fit the data more accurately, resulting in reduced bias. However, as the complexity increases (degree=5 and 10), we observe that the models start to capture the random fluctuations in the data, resulting in higher variance. These models may fit the training data very well but are likely to perform poorly on unseen data.\n\n- The model with a degree of 3 strikes a good balance between bias and variance, as it captures the underlying cubic relationship while avoiding overfitting.\n\n## Conclusion\n\nThe bias-variance trade-off is a fundamental concept in machine learning. It helps us understand the relationship between the complexity of a model and its ability to generalize to unseen data. By finding the right balance between bias and variance, we can develop models that accurately represent the patterns in the data without overfitting or oversimplifying the relationships."},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"bias v.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.55","theme":"cosmo","title":"","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html","revealjs"]}